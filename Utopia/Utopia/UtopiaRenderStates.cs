using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using S33M3Engines;
using Utopia.GUI.D3D.Inventory;
using Utopia.Network;
using S33M3Engines.WorldFocus;
using Utopia.Shared.Entities;
using Utopia.Shared.Entities.Dynamic;
using Utopia.Shared.World;
using S33M3Engines.GameStates;
using S33M3Engines.Cameras;
using S33M3Engines.Timers;
using Utopia.InputManager;
using Utopia.Action;
using Utopia.GUI.D3D;
using Nuclex.UserInterface;
using Utopia.Entities;
using S33M3Engines.D3D.DebugTools;
using Utopia.Worlds.GameClocks;
using Utopia.GUI;
using Utopia.GUI.D3D.Map;
using Utopia.Editor;
using S33M3Engines.D3D;
using Utopia.Worlds.SkyDomes;
using Utopia.Worlds.Weather;
using Utopia.Worlds.Storage;
using Utopia.Worlds.Cubes;
using Utopia.Worlds.Chunks.ChunkLandscape;
using Utopia.Shared.Chunks;
using Utopia.Worlds.Chunks.ChunkLighting;
using Utopia.Worlds.Chunks.ChunkMesh;
using Utopia.Worlds.Chunks;
using Utopia.Worlds.Chunks.ChunkWrapper;
using Utopia.Shared.Interfaces;
using Utopia.Entities.Renderer.Interfaces;
using Utopia.Worlds.Chunks.ChunkEntityImpacts;
using Utopia.Entities.Managers.Interfaces;
using Utopia.Entities.Managers;
using Utopia.Entities.Voxel;
using Utopia.Effects.Shared;

namespace Utopia
{
    public class UtopiaRenderStates
    {
        public D3DEngine engine;
        public Server server;
        public WorldFocusManager worldFocusManager;
        public WorldParameters worldParameters;
        public VisualWorldParameters visualWorldParameters;
        public GameStatesManager gameStatesManager;
        public ICamera firstPersonCamera;
        public CameraManager cameraManager;
        public TimerManager timerManager;
        public EntityMessageTranslator entityMessageTranslator;
        public ItemMessageTranslator itemMessageTranslator;
        public InputsManager inputsManager;
        public ActionsManager actionsManager;
        public GuiManager guiManager;
        public Screen screen;
        public IconFactory iconFactory;
        public FPS fps;
        public IClock gameClock;
        public InventoryComponent inventoryComponent;
        public ChatComponent chatComponent;
        public MapComponent mapComponent;
        public Hud hud;
        public EntityEditor entityEditor;
        public IDrawableComponent stars;
        public ISkyDome skydome;
        public IWeather weather;
        public IDrawableComponent clouds;
        public IChunkStorageManager chunkStorageManager;
        public ICubeMeshFactory solidCubeMeshFactory;
        public ICubeMeshFactory liquidCubeMeshFactory;
        public SingleArrayChunkContainer singleArrayChunkContainer;
        public ILandscapeManager landscapeManager;
        public ILightingManager lightingManager;
        public IChunkMeshManager chunkMeshManager;
        public IWorldChunks worldChunks;
        public IChunksWrapper chunksWrapper;
        public WorldGenerator worldGenerator;
        public IWorldProcessorConfig worldProcessorConfig;
        public IPickingRenderer pickingRenderer;
        public IChunkEntityImpactManager chunkEntityImpactManager;
        public IEntityPickingManager entityPickingManager;
        public IDynamicEntityManager dynamicEntityManager;
        public PlayerEntityManager playerEntityManager;
        public PlayerCharacter playerCharacter;
        public IEntitiesRenderer playerEntityRenderer;
        public IEntitiesRenderer defaultEntityRenderer;
        public VoxelMeshFactory voxelMeshFactory;
        public SharedFrameCB sharedFrameCB;
    }
}
