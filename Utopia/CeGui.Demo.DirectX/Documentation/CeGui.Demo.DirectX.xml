<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CeGui.Demo</name>
    </assembly>
    <members>
        <member name="T:CeGui.Demo.DirectX.CeGuiDemoForm">
            <summary>A form used to host the CeGui demo gui in Direct3D</summary>
            <remarks>
              This form hosts the CeGui windowing system and forwards relevant events
              (key presses, mouse movements and button clicks) to CeGui. Since CeGui
              displays its own mouse cursor, the window tries to capture the mouse
              and disables the windows cursor.
            </remarks>
        </member>
        <member name="T:Direct3DForm">
            <summary>A window that uses Direct3D to draw its contents</summary>
            <remarks>
              <para>
                This class can be used as a framework for quick D3D experimentation. It is not
                intended to replace a full-blown rendering framework as it barely automates the
                initialization of Direct3D and some maintenance work like handling window resizes.
              </para>
              <para>
                Usage is simple: Just derive your own form from this one. Then override OnRender()
                (and OnResetDevice() if you've got any unmanaged D3D resources) and you're ready
                to go. The D3D device can be accessed as this.d3dDevice
              </para>
            </remarks>
        </member>
        <member name="F:Direct3DForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Direct3DForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Direct3DForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Direct3DForm.#ctor">
            <summary>Initializes the window</summary>
        </member>
        <member name="M:Direct3DForm.OnLoad(System.EventArgs)">
            <summary>Gets executed when the form is brought onto the screen</summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:Direct3DForm.OnClosed(System.EventArgs)">
            <summary>Executed when the window has been closed for good</summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:Direct3DForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>We don't want to paint here to avoid flickering </summary>
            <param name="e">Additional parameters that control painting</param>
        </member>
        <member name="M:Direct3DForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the window contents</summary>
            <param name="e">Additional parameters that control painting</param>
        </member>
        <member name="M:Direct3DForm.OnResize(System.EventArgs)">
            <summary>Called when the window changes its size</summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:Direct3DForm.OnResetDevice">
            <summary>Resets the Direct3D device</summary>
        </member>
        <member name="M:Direct3DForm.OnRender(System.EventArgs)">
            <summary>Executed to render the Direct3D scene</summary>
            <param name="e">Not used</param>
        </member>
        <member name="F:Direct3DForm.d3dDevice">
            <summary>The Direct3D rendering device</summary>
        </member>
        <member name="F:Direct3DForm.presentParameters">
            <summary>Presentation settings for the active Direct3D device</summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.#ctor">
            <summary>Initializes the CeGui demonstration form</summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnLoad(System.EventArgs)">
            <summary>Executed when the form is loaded for the first time</summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.loadCeGuiResources">
            <summary>Loads dynamic resources</summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.setupDefaults">
            <summary>Configures the default cursor and font for CeGui</summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnRender(System.EventArgs)">
            <summary>Executed to render the Direct3D scene</summary>
            <param name="e">Not used</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnResetDevice">
            <summary>Called by the Direct3DForm class when the device needs to be reset</summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Executed when a mouse button is pressed down</summary>
            <param name="e">Contains informations about which mouse button was pressed</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Executed when a mouse button is released again</summary>
            <param name="e">Contains informations about which mouse button was release</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnExitClicked(System.Object,CeGui.GuiEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnShowVideoModeSelectionClicked(System.Object,CeGui.GuiEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Executed when the mouse is moved above the dialog</summary>
            <param name="e">Contains informations about the mouse movement</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Executed when a key is pressed down</summary>
            <param name="e">Contains informations about which key has been pressed</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Executed when a key is released again</summary>
            <param name="e">Contains informations about which key has been released</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Executed when a character has been entered using the keyboard</summary>
            <param name="e">Contains informations about which character has been entered</param>
        </member>
        <member name="F:CeGui.Demo.DirectX.CeGuiDemoForm.guiRenderer">
            <summary>Renderer that is used to render the CeGui form through the D3D API</summary>
        </member>
        <member name="F:CeGui.Demo.DirectX.CeGuiDemoForm.rootGuiSheet">
            <summary>The root GUI sheet (sort of like the windows "desktop" window)</summary>
        </member>
        <member name="F:CeGui.Demo.DirectX.CeGuiDemoForm.closing">
            <summary>CeGui form we are hosting and rendering</summary>
        </member>
        <member name="F:CeGui.Demo.DirectX.CeGuiDemoForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.CeGuiDemoForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:CeGui.Demo.DirectX.CeGuiDemoForm.IsClosing">
            <summary>
            
            </summary>
        </member>
        <member name="T:CeGui.Demo.DirectX.Program">
            <summary>CeGui demonstration application</summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.Program.Main">
            <summary>The main entry point for the application</summary>
        </member>
        <member name="T:CeGui.Form">
            <summary>This makes CeGui behave almost like Windows.Forms :)</summary>
        </member>
        <member name="M:CeGui.Form.#ctor(CeGui.GuiBuilder,System.String)">
            <summary>Initializes the CeGui form class</summary>
            <param name="guiBuilder">Gui builder to use for creating widgets</param>
            <param name="name">The unique name of this form instance</param>
        </member>
        <member name="M:CeGui.Form.op_Implicit(CeGui.Form)~CeGui.Window">
            <summary>Provides implicit conversion to the CeGui.Window class</summary>
            <param name="form">CeGui.Form to be converted</param>
            <returns>The CeGui frame window represented by the given CeGui.Form</returns>
            <remarks>
              This method enables you to pass your form directly to the CeGui functions
              as if it were the FrameWindow itself. Makes the whole process look a lot
              more like Windows.Forms.
            </remarks>
        </member>
        <member name="F:CeGui.Form.guiBuilder">
            <summary>The CeGui gui builder used to created widgets on this form</summary>
        </member>
        <member name="F:CeGui.Form.frame">
            <summary>Frame window that this form is representing</summary>
        </member>
        <member name="T:CeGui.Demo.DirectX.VideoModeSelectionForm">
            <summary>Example form for the CeGui demonstration application</summary>
        </member>
        <member name="M:CeGui.Demo.DirectX.VideoModeSelectionForm.#ctor(CeGui.GuiBuilder)">
            <summary>Initializes the example form</summary>
            <param name="guiBuilder">
              Gui builder that is used to create the widgets on this form
            </param>
        </member>
        <member name="M:CeGui.Demo.DirectX.VideoModeSelectionForm.okButtonClicked(System.Object,CeGui.GuiEventArgs)">
            <summary>Handles clicks on the ok button of the dialog</summary>
            <param name="sender">Button that has been clicked</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.VideoModeSelectionForm.cancelButtonClicked(System.Object,CeGui.GuiEventArgs)">
            <summary>Handles clicks on the cancel button of the dialog</summary>
            <param name="sender">Button that has been clicked</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.VideoModeSelectionForm.formCloseClicked(System.Object,CeGui.WindowEventArgs)">
            <summary>Handles clicks on the close button of the dialog</summary>
            <param name="sender">Close button that has been clicked</param>
            <param name="e">Not used</param>
        </member>
        <member name="M:CeGui.Demo.DirectX.VideoModeSelectionForm.initializeComponent">
            <summary>Initializes the childs contained on this window</summary>
        </member>
        <member name="T:CeGui.Demo.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CeGui.Demo.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CeGui.Demo.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
